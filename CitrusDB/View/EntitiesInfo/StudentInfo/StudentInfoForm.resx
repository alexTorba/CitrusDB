<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="dragControl.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="closeButton.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAB4AAAAeCAYAAAA7MK6iAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAM6SURBVEhL5ZbLS1RRHMedoJc9iSKL3vaiovoHIlv0sKAoksrAbJR5+AClIbAQpKB2blopBbUo
        KCgKXCSt3EQR2kaLamtqYWZBaZZNn1/zdcaZuXe8jW2iL3yZ+X1/r3POPffck/PPoKGhYUpFRUVeMBjc
        VllZubmsrGyBXH8fVjwcDgdgKxyB0RR+gjcZ0JFAIDBVadmDIrkUrIODsBNeCoVCBegrrEFtbe1MZr0e
        /SBsgj3wDQM4RrovVuUPQeGNFHltpNlhyRlRXV09naYRcj7CFuy5cnkDybssmYbNVkyyZ1RVVS2lxmNq
        dPG7XHJmaKaDND0jKSsUFRVNo84d+DwSicyS7AwLINCWt0nSpKA90sEkbklyBgH1LM1LG62kSYPm+TQf
        hjslJYNnuQjnZ3bpIUlxWDLv7W6ZbvAx8JNOy4reSO2nMpOBE1+4U2YS0AvhCKtxQlIqfPiuEDNgG0ta
        HOXl5Yvx/bADR1ICOB6RfEFmGvAXWXMGGJT0GzrJruHrtY0pOQ3ktcF6mXH4SByCO2Q7Qs2/jTUf17Qn
        U1MDceeJa5UZA0kLEaM852WSXEGBo9Ychrw2NRBXDLtkxsAMtiD+pICnc9aaw1Fy7ITaIDkjiLdDaUBm
        DDpvozTOleSKseVlsB/ISXvmbiBuL3l9MmNAmK3G+ZIcMe6ZvtVgD8AhL82JO01cu8wEcPTDQplpGNe0
        25pKtjxr/hWekuQIci8Tc1dmAog3GFGzzCRYU/xXYTcHyTrJcaDtx/cFujbHZ185v8wEGJHt1t7S0tIZ
        kuLAVwL7aLBJUhrItVdtiLi1kuKw2wq+UXx5khKwHW2jgnWS4vD7/XMck1JgTW11ZMZBzYfwusx0sBTH
        CXA89rIFg9lHzWFqr5LkCDvBWuATpyX/UzCB1dTqp/lZSe6oqamZT/Argu95ea/dwM5fSR27gdzG9Hb/
        ImENfEHSMysg2TNY1gLy39ngJ7x9pILZziP5AbQDohF7iVyuoNF2Yu+T853/9qXL7qZpoMAeCnXAUYq2
        YdststguBvwWYpfwexF2wSi2PaIJPxqeQdGt8By0V8Pu2O9hD4Npt2b8Br183f5X5OT8ApfHuMWzHb0T
        AAAAAElFTkSuQmCC
</value>
  </data>
</root>